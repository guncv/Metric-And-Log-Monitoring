version: "3.8"

services:

  # -------------------- APP SERVICE --------------------
  demo-app-first:
    build:
      context: ./demo_app
      dockerfile: Dockerfile.first
    ports:
      - "5001:5001"
      - "8001:8001"
    logging:
      driver: "json-file"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/"]
      interval: 30s
      timeout: 10s
      retries: 5
    # depends_on:
      # - kafka
    restart: unless-stopped

  demo-app-second:
    build:
      context: ./demo_app
      dockerfile: Dockerfile.second
    ports:
      - "5002:5002"
      - "8002:8002"
    logging:
      driver: "json-file"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  demo-app-third:
    build:
      context: ./demo_app
      dockerfile: Dockerfile.third
    ports:
      - "5003:5003"
      - "8003:8003"
    logging:
      driver: "json-file"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # -------------------- METRIC MONITORING --------------------
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./metrics/alert.rules.yml:/etc/prometheus/alert.rules.yml
    depends_on:
      - demo-app-first
      - demo-app-second
      - demo-app-third
      - node-exporter
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
      # - elasticsearch
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./metrics/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/data
    environment:
      - SMTP_FROM=chanagun.vir.work@gmail.com
      - SMTP_USERNAME=chanagun.vir.work@gmail.com
      - SMTP_PASSWORD="insx cwiq bwkh jelz"
      - SMTP_TO=chanagun.vir.work@gmail.com
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    container_name: node-exporter
    restart: unless-stopped

  # # -------------------- LOG STACK --------------------
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #     - ES_JAVA_OPTS=-Xms512m -Xmx512m
  #   ports:
  #     - "9200:9200"
  #   restart: unless-stopped

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:8.12.0
  #   volumes:
  #     - ./logstack/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #   depends_on:
  #     - kafka
  #     - elasticsearch
  #   restart: unless-stopped

  # # -------------------- EVENT MESH --------------------
  # kafka:
  #   image: bitnami/kafka:3.5
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
  #   depends_on:
  #     - zookeeper
  #   restart: unless-stopped

  # zookeeper:
  #   image: bitnami/zookeeper:latest
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  #   restart: unless-stopped

volumes:
  grafana-storage:
  alertmanager-data:
